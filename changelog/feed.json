{
    "version": "https://jsonfeed.org/version/1",
    "title": "Monosi Documentation Blog",
    "home_page_url": "https://docs.monosi.dev/changelog",
    "description": "Monosi Documentation Blog",
    "items": [
        {
            "id": "latest-release",
            "content_html": "<p>Monosi Alpha Release </p><img alt=\"Monosi Release\" class=\"case-study-header\" src=\"/img/example.gif\"/><br/><ul><li>Full-fledged user interface, redesigned and includes analysis capabilities</li><li>Deployment re-developed</li><li>Better and more documentation</li><li>Built-in anomaly and slack integraitons</li><li>Initial testing</li><li>Much more</li></ul>",
            "url": "https://docs.monosi.dev/changelog/latest-release",
            "title": "v0.1.0-alpha Release",
            "summary": "Monosi Alpha Release",
            "date_modified": "2022-03-07T00:00:00.000Z",
            "author": {
                "name": "Kevin Unkrich"
            }
        },
        {
            "id": "v003",
            "content_html": "<p>Web Interface, PostgreSQL Support, Slack Alerting, &amp; more.</p><hr/><p>Monosi&#x27;s v0.0.3 alpha release continues to enrich the available functionality provided by the observability toolkit.</p><h3>Monosi Web Interface &amp; Server</h3><p>With the release of v0.0.3 comes a new interface for interacting with Monosi. A simple and robust web application can now be used to set up monitors on specific data sources and alert on anomalies.</p><p>Find more information on getting started with the Monosi web interface <a href=\"/docs/user-guide/introduction\">here</a>.</p><img src=\"/img/changelog/v003/ui_interface_v003.gif\"/><h3>Docker Image Deployment</h3><p>We have provided a Monosi <a href=\"https://hub.docker.com/r/monosi/monosi\">docker image</a> to run the new web interface and simplify deployment.</p><p>You can run the application via docker and deploy it accordingly with dockerfiles/compose/nginx config files. More information can be found <a href=\"/docs/guides/quick-install\">here</a>.</p><pre><code>docker run -d -p 3000:3000 monosi/monosi\n</code></pre><h3>PostgreSQL Support</h3><p>Monosi now supports PostgreSQL as a core driver. More information on setting up a Postgres connection for the CLI can be found <a href=\"/docs/integrations/postgresql\">here</a>. To setup a connection in the web interface, simply navigate to the datasources page.</p><p>Along with adding PostgreSQL, the driver implementation has been refactored to simplify adding support for other datasources. <a href=\"https://github.com/monosidev/monosi/issues\">Open an issue</a> for the data source you want Monosi to support.</p><pre><code>cat ~/.monosi/workspaces.yml\n\ndefault:\n  sources:\n    default: \n      type: postgres\n      user: &lt;USER&gt;\n      password: &lt;PASSWORD&gt;\n      host: &lt;HOST&gt;\n      port: &lt;PORT&gt;\n      database: &lt;DATABASE&gt;\n</code></pre><h3>Slack Alert Integrations</h3><p>Monosi can now send alerts to Slack channels when anomalies are detected (Web Interface only). Alerts are sent through <a href=\"https://api.slack.com/messaging/webhooks\">channel webhooks</a>. More information can be found <a href=\"/docs/integrations/slack\">here</a>.</p><p>The Slack alert format is still being determined. Join the discussion on how to format alerts in our <a href=\"https://monosi.dev/slack\">Slack community</a>.</p><img src=\"/img/changelog/v003/Monosi_Slack_Alert.svg\"/><h3>Schema Change Monitoring</h3><p>We have added a new monitor type for tracking schema changes (CLI only). If at any point a monitored table experiences a schema change, Monosi will alert on the anomaly. More information on schema monitors can be found <a href=\"https://docs.monosi.dev/\">here</a>.</p><pre><code>monosi:\n  monitors:\n    - type: schema\n      table: snowflake_sample_data.tpch_sf100.orders\n      columns:\n        - name: o_custkey\n          type: integer\n          order: 1\n        - name: o_orderdate\n          type: date\n          order: 2\n        - name: o_comment\n          type: string\n          order: 3\n</code></pre><h3>Driver Refactors &amp; Bug Fixes</h3><p>A driver code refactor was introduced with v0.0.3 to support easier development of database driver integrations.</p><p>Furthermore, bug fixes and code changes have been made to make Monosi increasingly more stable as we approach v0.1.</p>",
            "url": "https://docs.monosi.dev/changelog/v003",
            "title": "v0.0.3 Release",
            "summary": "Web Interface, PostgreSQL Support, Slack Alerting, & more.",
            "date_modified": "2022-02-07T00:00:00.000Z",
            "author": {
                "name": "Kevin Unkrich"
            }
        },
        {
            "id": "v002",
            "content_html": "<p>Built-in Scheduler, Custom SQL Monitors, Database Profiler, &amp; more.</p><hr/><p>Monosi&#x27;s v0.0.2 release brings a number of compelling features to the toolkit, which we believe will be incredibly useful.</p><p>Dive into the features that we&#x27;ve introduced below, or take a look at past updates.</p><h3>Monosi Scheduler &amp; Server</h3><p>With the introduction of v0.0.2 comes a built-in scheduler and server. With this addition, users can run a single command to allow continuous monitoring of their data sources for data quality issues.</p><p>While other data quality packages require setting up complicated pipelines and regularly recurring checks, Monosi has added support for running your monitors on the schedule you define continuously.</p><img src=\"/img/changelog/v002/scheduler.gif\"/><br/><h3>Monosi Profiler</h3><p>The Monosi Profiler automatically profiles your database to suggest and create new monitors for you to run from scratch.</p><p>New Monosi users can run the profile command to instantly bootstrap their library of data quality checks and start monitoring in minutes.</p><img src=\"/img/changelog/v002/profile.gif\"/><br/><h3>Custom SQL Monitors</h3><p>We&#x27;re constantly working on adding more data quality checks to Monosi. Accordingly, we&#x27;ve introduced Custom SQL Monitors so that you can write custom rules and thresholds for any query.</p><p>In the future, be on the outlook for additional monitor types for freshness, schema checks, distribution, and more.</p><img src=\"/img/changelog/v002/custom_monitor.gif\"/><br/><h3>Bug Fixes</h3><p>Bug fixes and code changes have been made to make Monosi increasingly more stable as we approach v0.1.</p>",
            "url": "https://docs.monosi.dev/changelog/v002",
            "title": "v0.0.2 Release",
            "summary": "Built-in Scheduler, Custom SQL Monitors, Database Profiler, & more.",
            "date_modified": "2022-01-20T00:00:00.000Z",
            "author": {
                "name": "Kevin Unkrich"
            }
        },
        {
            "id": "v001",
            "content_html": "<p>Initial release - monitor table health metrics via CLI.</p>",
            "url": "https://docs.monosi.dev/changelog/v001",
            "title": "v0.0.1 Release",
            "summary": "Initial release - monitor table health metrics via CLI.",
            "date_modified": "2022-01-01T00:00:00.000Z",
            "author": {
                "name": "Kevin Unkrich"
            }
        }
    ]
}